# -*- coding: utf-8 -*-
"""FM5252 HW1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i_2_58loNUvTQIC-axRcJKYZmQt-Bwoc
"""

import numpy as np
import scipy.stats as ss
import sympy as sy
from scipy.stats import norm
from sympy.stats import cdf


d1 = lambda S, K, r, sigma, T: (np.log(S / K) + (r + 0.5 * sigma ** 2) * T) / (sigma * np.sqrt(T))
d2 = lambda S, K, r, sigma, T: d1(S, K, r, sigma, T)- sigma * np.sqrt(T)

#BSM Valuation
CallPrice = lambda S, K, r, sigma, T: S*norm.cdf(d1(S, K, r, sigma, T),0,1) - np.exp(-r*(T))*K* norm.cdf(d2(S, K, r, sigma, T),0,1)
PutPrice = lambda S, K, r, sigma, T: np.exp(-r*(T))*K* norm.cdf(-d2(S, K, r, sigma, T),0,1) - S*norm.cdf(-d1(S, K, r, sigma, T),0,1) 

#Greeks

#Delta
CallDelta = lambda S, K, r, sigma, T: norm.cdf(d1(S, K, r, sigma, T),0,1)
PutDelta = lambda S, K, r, sigma, T: norm.cdf(d1(S, K, r, sigma, T),0,1) - 1

#Gamma
Gamma = lambda S, K, r, sigma, T: norm.pdf(d1(S, K, r, sigma, T),0,1) / (S * sigma * np.sqrt(T))

#Vega
Vega = lambda S, K, r, sigma, T: S* norm.pdf(d1(S, K, r, sigma, T),0,1) * np.sqrt(T)

#Theta
CallTheta = lambda S, K, r, sigma, T: -S* norm.pdf(d1(S, K, r, sigma, T),0,1) * sigma / (2* np.sqrt(T)) - r* K* np.exp(-r*T)* norm.cdf(d2(S, K, r, sigma, T),0,1)
PutTheta = lambda S, K, r, sigma, T: -S* norm.pdf(d1(S, K, r, sigma, T),0,1) * sigma / (2* np.sqrt(T)) + r* K* np.exp(-r*T)* norm.cdf(-d2(S, K, r, sigma, T),0,1)

#Rho
CallRho = lambda S, K, r, sigma, T: K* T* np.exp(-r*T)* norm.cdf(d2(S, K, r, sigma, T),0,1)
PutRho = lambda S, K, r, sigma, T: -K* T* np.exp(-r*T)* norm.cdf(-d2(S, K, r, sigma, T),0,1)